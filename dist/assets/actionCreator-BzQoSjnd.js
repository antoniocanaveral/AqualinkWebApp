const i={FB_LOGIN_BEGIN:"FB_LOGIN_BEGIN",FB_LOGIN_SUCCESS:"FB_LOGIN_SUCCESS",FB_LOGIN_ERR:"FB_LOGIN_ERR",FB_SIGNUP_BEGIN:"FB_SIGNUP_BEGIN",FB_SIGNUP_SUCCESS:"FB_SIGNUP_SUCCESS",FB_SIGNUP_ERR:"FB_SIGNUP_ERR",fbLoginBegin:()=>({type:i.FB_LOGIN_BEGIN}),fbLoginSuccess:t=>({type:i.FB_LOGIN_SUCCESS,data:t}),fbLoginErr:t=>({type:i.FB_LOGIN_ERR,err:t}),fbSignUpBegin:()=>({type:i.FB_SIGNUP_BEGIN}),fbSignUpSuccess:t=>({type:i.FB_SIGNUP_SUCCESS,data:t}),fbSignUpErr:t=>({type:i.FB_SIGNUP_ERR,err:t})},{fbLoginBegin:S,fbLoginSuccess:c,fbLoginErr:_,fbSignUpBegin:g,fbSignUpSuccess:B,fbSignUpErr:I}=i,G=t=>async(a,o,{getFirebase:r})=>{const e=r();try{await a(S()),await e.auth().signInWithEmailAndPassword(t.username,t.password),await a(c())}catch(n){await a(_(n))}},b=t=>async(a,o,{getFirebase:r,getFirestore:e})=>{const n=e(),u=r();try{await a(g());const s=await u.auth().createUserWithEmailAndPassword(t.email,t.password);await n.collection("users").doc(s.user.uid).set({...t}),await a(B())}catch(s){await a(I(s))}},E=()=>async(t,a,{getFirebase:o})=>{const r=o(),e=new r.auth.GoogleAuthProvider;try{await t(S());const n=await r.auth().signInWithPopup(e);await t(c(n))}catch(n){await t(_(n))}},N=()=>async(t,a,{getFirebase:o})=>{const r=o(),e=new r.auth.FacebookAuthProvider;try{await t(S());const n=await r.auth().signInWithPopup(e);await t(c(n))}catch(n){await t(_(n))}};export{N as a,G as b,b as c,E as f};
