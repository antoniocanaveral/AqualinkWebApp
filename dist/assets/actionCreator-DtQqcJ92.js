import{dZ as d,cc as o,d_ as g,d$ as f,cD as c,e0 as n,e1 as l,cd as i,e2 as D,e3 as h,e4 as _,e5 as w,e6 as m,e7 as I,e8 as S}from"./index-zxEALkft.js";const O=s=>async e=>{e(l());try{const r=i.get("orgId");if(!r)throw new Error("Org ID no encontrado en las cookies.");const a=await o.get(`/models/SM_SecurityKits?$filter=AD_Org_ID eq ${r} AND sm_kittype eq '${s}' &$orderby=sm_kitcode`);a.data&&a.data.records?e(D(a.data.records)):e(n("No se encontraron Security Kits para esta organización."))}catch(r){c(r,e,n)}},$=()=>async s=>{s(m());try{const e=i.get("orgId");if(!e)throw new Error("Org ID no encontrado en las cookies.");const r=await o.get(`/models/sm_fishingdrawerstamp?$filter=AD_Org_ID eq ${e}`);r.data&&r.data.records?s(I(r.data.records)):s(S("No se encontraron Fishing Drawer Stamps para esta organización."))}catch(e){c(e,s,n)}},u=s=>async e=>{e(d());try{const a=(await o.get(`/models/sm_coordinations_view?$filter=ci_id eq ${s}`)).data.records[0].SM_Fishing_ID.id,t=await o.get(`/models/sm_fishingdrawer_info_v?$filter=SM_Fishing_ID eq ${a}`);t.data&&t.data.records?(console.log(t.data.records),e(g(t.data.records))):e(f("No se encontró información de Fishing Drawer."))}catch(r){c(r,e,n)}},F=()=>async s=>{s(h());try{const e=i.get("selectedClientId");if(!e)throw new Error("Org ID no encontrado en las cookies.");const r=await o.get(`/models/sm_treaters_info_v?$filter=AD_Client_ID eq ${e}`);if(r.data&&r.data.records){const a=r.data.records.map(t=>({label:t.user_name,value:t.AD_User_ID.id}));s(_(a))}else s(w("No se encontraron tratadores en esta organización."))}catch(e){c(e,s,n)}};export{O as a,F as b,$ as c,u as f};
